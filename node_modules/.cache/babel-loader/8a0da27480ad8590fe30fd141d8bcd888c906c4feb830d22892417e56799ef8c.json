{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dixita\\\\projects\\\\NCAR-Project6\\\\src\\\\ToolTip.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport { Tooltip } from '@mui/material';\nimport HelpIcon from '@mui/icons-material/Help';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  customTooltip: {\n    fontSize: '22px',\n    // Change this value to your desired font size\n    color: 'white' // Additional custom styles for the tooltip\n  }\n}));\n\nexport default function CustomTooltip(_ref) {\n  _s();\n  let {\n    title,\n    placement = 'top'\n  } = _ref;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '1px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: title,\n      placement: placement,\n      classes: {\n        tooltip: classes.customTooltip\n      },\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(HelpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomTooltip, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = CustomTooltip;\nvar _c;\n$RefreshReg$(_c, \"CustomTooltip\");","map":{"version":3,"names":["React","IconButton","Tooltip","HelpIcon","makeStyles","jsxDEV","_jsxDEV","useStyles","theme","customTooltip","fontSize","color","CustomTooltip","_ref","_s","title","placement","classes","style","margin","children","tooltip","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dixita/projects/NCAR-Project6/src/ToolTip.js"],"sourcesContent":["import React from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { Tooltip } from '@mui/material';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  customTooltip: {\r\n    fontSize: '22px', // Change this value to your desired font size\r\n    color: 'white', // Additional custom styles for the tooltip\r\n  },\r\n}));\r\n\r\nexport default function CustomTooltip({ title, placement = 'top' }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{ margin: '1px' }}>\r\n      <Tooltip title={title} placement={placement} classes={{ tooltip: classes.customTooltip }}>\r\n        <IconButton>\r\n          <HelpIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,UAAU,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAK,KAAM;EACvCC,aAAa,EAAE;IACbC,QAAQ,EAAE,MAAM;IAAE;IAClBC,KAAK,EAAE,OAAO,CAAE;EAClB;AACF,CAAC,CAAC,CAAC;;AAEH,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAA+B;EAAAC,EAAA;EAAA,IAA9B;IAAEC,KAAK;IAAEC,SAAS,GAAG;EAAM,CAAC,GAAAH,IAAA;EAChE,MAAMI,OAAO,GAAGV,SAAS,CAAC,CAAC;EAE3B,oBACED,OAAA;IAAKY,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAM,CAAE;IAAAC,QAAA,eAC5Bd,OAAA,CAACJ,OAAO;MAACa,KAAK,EAAEA,KAAM;MAACC,SAAS,EAAEA,SAAU;MAACC,OAAO,EAAE;QAAEI,OAAO,EAAEJ,OAAO,CAACR;MAAc,CAAE;MAAAW,QAAA,eACvFd,OAAA,CAACL,UAAU;QAAAmB,QAAA,eACTd,OAAA,CAACH,QAAQ;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACX,EAAA,CAZuBF,aAAa;EAAA,QACnBL,SAAS;AAAA;AAAAmB,EAAA,GADHd,aAAa;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}