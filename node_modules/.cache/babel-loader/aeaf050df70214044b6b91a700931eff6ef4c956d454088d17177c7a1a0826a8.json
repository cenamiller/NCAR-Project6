{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dixita\\\\projects\\\\NCAR-Project6\\\\src\\\\StudentExercise1.js\",\n  _s = $RefreshSig$();\n// Importing necessary dependencies and components\nimport React, { useState, useEffect } from 'react';\nimport CustomTooltip from './ToolTip';\nimport Button from './Button';\nimport Summary from './summary';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport CustomBox from './Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentExercise1 = () => {\n  _s();\n  // State variables\n  const [answer2, setAnswer2] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [resultMessage2, setResultMessage2] = useState('');\n  const [volume, setVolume] = useState('');\n  const [frequency, setFrequency] = useState('');\n  const [inputOne, setInputOne] = useState(localStorage.getItem('inputOne') || '');\n  const [inputTwo, setInputTwo] = useState(localStorage.getItem('inputTwo') || '');\n  const [divisionResult, setDivisionResult] = useState('');\n  const [iofreq, setIOfreq] = useState(\"\");\n  const threshold = 50;\n  const navigate = useNavigate();\n\n  // Function to handle input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'volume') {\n      setVolume(value);\n      localStorage.setItem('IOVolume', value);\n    } else if (name === 'frequency') {\n      setFrequency(value);\n      localStorage.setItem('IOFrequency', value);\n    } else if (name === 'answer2') {\n      setAnswer2(value);\n      localStorage.setItem('RateThroughput', value);\n    } else if (name === 'inputOne') {\n      setInputOne(value);\n      localStorage.setItem('InputOne', value);\n    } else if (name === 'inputTwo') {\n      setInputTwo(value);\n      localStorage.setItem('InputTwo', value);\n    }\n  };\n\n  // Function to handle form submission\n  //This function outputs answers based on the user's  answers\n\n  const handleSubmit = e => {\n    if (inputOne && inputTwo && volume && frequency && answer2) {\n      // this condition checks if the user has entered all the inputs before clicking submit\n      setSubmitted(true);\n      const x = parseFloat(inputOne); //converting string inputs to intergers\n      const y = parseFloat(inputTwo);\n      const w = parseFloat(volume);\n      const z = parseFloat(frequency);\n      if (!isNaN(x) && !isNaN(y) && !isNaN(w) && !isNaN(z)) {\n        const division = x / y; //calculating division result\n        const iof = w / z; // calculating IOfreq by dividing volume with frequency \n\n        let result = \"\"; //An empty string is initialized which is later used to output the result message.\n\n        //Below string is shown when the division result is greater than 50, iofreq is less than 100 and throughput is chosen  \n        const start1 = `Based on your input, it appears that your science objective is amenable to GPU-based computing. This assessment is based on several of your answers:`;\n        //Below string is shown when division result is greater than 50\n        const True1 = `The number of grid points of ${divisionResult} per GPU or node is sufficient.Typically, a GPU based \\n\\t    computing solution requires in excessive of ${threshold} grid points per GPU`;\n\n        //Below string is shown when iofreq is less than 100\n        const True2 = `GPU’s are designed for computationally heavy problems.\\nYou indicated that you perform approximately ${volume} Mbytes of disk I/O every ${frequency} seconds.It sounds like a significant percentage of time for your application is spent performing computations.This is necessary but not sufficient condition for the efficient use of GPU-based computing.`;\n\n        //Below string is shown if either division result is less than 50 OR iofreq is greater than 100 OR rate is chosen\n        const start2 = `Based on your input, it does not appear that your science objective is amenable to GPU-based computing.This assessment is based on several of your answers:`;\n\n        //Below string is shown if division result is less than 50\n        const False1 = `The number of grid points per GPU or node is rather low ${divisionResult}. Typically, a GPU based \\n\\t    computing solution requires in excess of ${threshold} grid points per GPU. What can I do \\n\\t    about this?\\n\\t\\ta. Is the size of your problem sufficient to address your science objective or is it a \\n\\t\\t    limitation of your existing compute solution. If it is sufficient to address your \\n\\t\\t    science objective, then there does not appear to be an advantage of GPU-\\n\\t\\t    based solution versus a \\n\\t\\t    CPU-based solution.  If it is not sufficient, then a GPU-based solution may enable \\n\\t\\t    improvement of the fidelity of your simulations.`;\n\n        //Below string is shown if iofrq is greater than 100\n        const False2 = `GPU’s are designed for computationally heavy problems.You indicated that you perform approximately ${volume} Mbytes of disk I/O every ${frequency} seconds. A significant percentage of time for your application will likely be spent moving data from the GPU memory to the disk subsystem. What can I do about this? Can you reduce the amount of I/O that your application performs`;\n        //Below string is shown if rate is chosen\n        const False3 = `You indicated that your problem has a [[strong, moderate, weak} ${answer2} limitation. \\n\\t\\t    While GPU-based computing can successfully be used for both rate and throughput \\n\\t\\t    computing tasks, it frequently does better for throughput based computing.`;\n        let num = 0; //This variables is used to create an ordered list for the output. \n        //num increments as the number of \"No\"s chosen by the user go up\n\n        if (division > 50 && iof < 100 && answer2 == \"throughput\") {\n          //if division result is greater than 50, iofreq is less than 100 and throuhgput is chosen, \"start1\", \"True1\" and \"True2\" are concatenated\n          result = start1 + \"\\n\\t\" + \"a. \" + True1 + \"\\n\\t\" + \"b. \" + True2;\n        } else {\n          //if division result is less than 50 OR iofreq is greater than 100 OR rate is chosen, then \"start2\" is set to the empty \"result\" string\n          result = start2;\n        }\n        if (division < 50) {\n          //if division is less than 50, num is incremented and concatenated to the result string alog with \"False1\" \n          num += 1;\n          result += \"\\n\\t\" + num + \". \" + False1;\n        }\n        if (iof > 100) {\n          //if iofreq is greater than 100, num is incremented and concatenated to the result string alog with \"False2\" \n          num += 1;\n          result += \"\\n\\t\" + num + \". \" + False2;\n        }\n        if (answer2 == \"rate\") {\n          //if rate is chosen, num is incremented and concatenated to the result string alog with \"False3\" \n          num += 1;\n          result += \"\\n\\t\" + num + \". \" + False3;\n        }\n        setDivisionResult(division); //This statement assigns \"division\" variable to the \"divisionResult\" variable\n        localStorage.setItem('divisionResult', division); //This line stores \"division\" in local storage so it can be retrieved and displayed in the summary page. \n        setIOfreq(iof); //This statement assigns \"iof\" variable to the \"iofreq\" variable\n        localStorage.setItem('iofreq', iof); //This line stores \"iof\" in local storage so it can be retrieved and displayed in the summary page. \n        setResultMessage2(result); //This statement assigns \"result\" variable to the \"ResultMessage2\" variable\n        localStorage.setItem('resultMessage2', result); //This line stores \"result\" in local storage so it can be retrieved and displayed in the summary page. \n        navigate('/page2'); // This line of code is used to navigate to page 2\n      }\n    } else {\n      alert('Please answer all questions.'); //This message is shown when the user does not answer all the questions\n    }\n\n    e.preventDefault();\n  };\n\n  // Function to clear options and reset the form\n  const clearOptions = e => {\n    e.preventDefault();\n    setAnswer2('');\n    setDivisionResult(\"\");\n    setResultMessage2(\"\");\n    setInputOne(\"\");\n    setInputTwo(\"\");\n    setVolume(\"\");\n    setFrequency(\"\");\n  };\n  function handleOnClick2(event) {\n    navigate('/page0'); // Function to navigate back to the home page\n  }\n  ;\n  useEffect(() => {\n    const storedVolume = localStorage.getItem('IOVolume') || '';\n    const storedFrequency = localStorage.getItem('IOFrequency') || '';\n    const storedAnswer2 = localStorage.getItem('RateThroughput') || '';\n    const storedInputOne = localStorage.getItem('InputOne') || '';\n    const storedInputTwo = localStorage.getItem('InputTwo') || '';\n    setVolume(storedVolume);\n    setFrequency(storedFrequency);\n    setAnswer2(storedAnswer2);\n    setInputOne(storedInputOne);\n    setInputTwo(storedInputTwo);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      alignment: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CustomBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ol\", {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Determine the following:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            start: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Total number of independent grid-points: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 59\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: inputOne,\n                onChange: handleInputChange,\n                name: \"inputOne\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Number of {node, GPU}: per run: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 58\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: inputTwo,\n                name: \"inputTwo\",\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [\"What is the volume and frequency of I/O?\", /*#__PURE__*/_jsxDEV(CustomTooltip, {\n                  title: \"Best explanation you can find for I/O frequency and Volume\",\n                  placement: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Volume:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"volume\",\n                value: volume,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Frequency:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"frequency\",\n                value: frequency,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [\"Do you have rate or throughput limitations?\", /*#__PURE__*/_jsxDEV(CustomTooltip, {\n                  title: \"A really good explanation of rate and throughput\",\n                  placement: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"options2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"answer2\",\n                  value: \"rate\",\n                  checked: answer2 === 'rate',\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 17\n                }, this), ' ', \"Rate\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  marginLeft: \"60px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"answer2\",\n                  value: \"throughput\",\n                  checked: answer2 === 'throughput',\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 17\n                }, this), ' ', \"Throughput\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"253.5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: \" Back \",\n          onClick: handleOnClick2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Clear\",\n          onClick: clearOptions,\n          style: {\n            marginLeft: \"10px\",\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentExercise1, \"4/yjSgFuLWPBKeKn9/3aS2a+vjc=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentExercise1;\nexport default StudentExercise1;\nvar _c;\n$RefreshReg$(_c, \"StudentExercise1\");","map":{"version":3,"names":["React","useState","useEffect","CustomTooltip","Button","Summary","Route","Routes","useNavigate","CustomBox","jsxDEV","_jsxDEV","StudentExercise1","_s","answer2","setAnswer2","submitted","setSubmitted","resultMessage2","setResultMessage2","volume","setVolume","frequency","setFrequency","inputOne","setInputOne","localStorage","getItem","inputTwo","setInputTwo","divisionResult","setDivisionResult","iofreq","setIOfreq","threshold","navigate","handleInputChange","e","name","value","target","setItem","handleSubmit","x","parseFloat","y","w","z","isNaN","division","iof","result","start1","True1","True2","start2","False1","False2","False3","num","alert","preventDefault","clearOptions","handleOnClick2","event","storedVolume","storedFrequency","storedAnswer2","storedInputOne","storedInputTwo","style","alignment","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","start","type","onChange","display","alignItems","title","placement","id","checked","marginLeft","text","onClick","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/dixita/projects/NCAR-Project6/src/StudentExercise1.js"],"sourcesContent":["// Importing necessary dependencies and components\r\nimport React, { useState, useEffect } from 'react';\r\nimport CustomTooltip from './ToolTip';\r\nimport Button from './Button';\r\nimport Summary from './summary';\r\nimport {Route, Routes, useNavigate} from 'react-router-dom';\r\nimport CustomBox from './Box';\r\n\r\n\r\nconst StudentExercise1 = () => {\r\n  // State variables\r\n  const [answer2, setAnswer2] = useState('');\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [resultMessage2, setResultMessage2] = useState('');\r\n  const [volume, setVolume] = useState('');\r\n  const [frequency, setFrequency] = useState('');\r\n  const [inputOne, setInputOne] = useState(localStorage.getItem('inputOne') || '');\r\n  const [inputTwo, setInputTwo] = useState(localStorage.getItem('inputTwo') || '');\r\n  const [divisionResult, setDivisionResult] = useState('');\r\n  const [iofreq, setIOfreq] = useState(\"\")\r\n  const threshold = 50;\r\n  const navigate = useNavigate();\r\n \r\n\r\n\r\n // Function to handle input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'volume') {\r\n      setVolume(value);\r\n      localStorage.setItem('IOVolume', value);\r\n    } else if (name === 'frequency') {\r\n      setFrequency(value);\r\n      localStorage.setItem('IOFrequency', value);\r\n    } else if (name === 'answer2') {\r\n      setAnswer2(value);\r\n      localStorage.setItem('RateThroughput', value);\r\n    } else if (name === 'inputOne') {\r\n      setInputOne(value);\r\n      localStorage.setItem('InputOne', value);\r\n    } else if (name === 'inputTwo') {\r\n      setInputTwo(value);\r\n      localStorage.setItem('InputTwo', value);\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n// Function to handle form submission\r\n//This function outputs answers based on the user's  answers\r\n\r\n  const handleSubmit = (e) => {\r\n    \r\n\r\n\r\n      if (inputOne && inputTwo && volume && frequency && answer2) {// this condition checks if the user has entered all the inputs before clicking submit\r\n        setSubmitted(true);\r\n\r\n\r\n        const x = parseFloat(inputOne); //converting string inputs to intergers\r\n        const y = parseFloat(inputTwo);\r\n        const w = parseFloat(volume)\r\n        const z = parseFloat(frequency)\r\n\r\n        if (!isNaN(x) && !isNaN(y) && !isNaN(w) && !isNaN(z)){\r\n          const division = x / y; //calculating division result\r\n          const iof = w / z; // calculating IOfreq by dividing volume with frequency \r\n\r\n        \r\n          let result = \"\" //An empty string is initialized which is later used to output the result message.\r\n\r\n          //Below string is shown when the division result is greater than 50, iofreq is less than 100 and throughput is chosen  \r\n          const start1 = `Based on your input, it appears that your science objective is amenable to GPU-based computing. This assessment is based on several of your answers:`\r\n          //Below string is shown when division result is greater than 50\r\n          const True1 = `The number of grid points of ${divisionResult} per GPU or node is sufficient.Typically, a GPU based \\n\\t    computing solution requires in excessive of ${threshold} grid points per GPU`\r\n\r\n          //Below string is shown when iofreq is less than 100\r\n          const True2 = `GPU’s are designed for computationally heavy problems.\\nYou indicated that you perform approximately ${volume} Mbytes of disk I/O every ${frequency} seconds.It sounds like a significant percentage of time for your application is spent performing computations.This is necessary but not sufficient condition for the efficient use of GPU-based computing.`\r\n\r\n\r\n          //Below string is shown if either division result is less than 50 OR iofreq is greater than 100 OR rate is chosen\r\n          const start2 = `Based on your input, it does not appear that your science objective is amenable to GPU-based computing.This assessment is based on several of your answers:`\r\n\r\n          //Below string is shown if division result is less than 50\r\n          const False1 = `The number of grid points per GPU or node is rather low ${divisionResult}. Typically, a GPU based \\n\\t    computing solution requires in excess of ${threshold} grid points per GPU. What can I do \\n\\t    about this?\\n\\t\\ta. Is the size of your problem sufficient to address your science objective or is it a \\n\\t\\t    limitation of your existing compute solution. If it is sufficient to address your \\n\\t\\t    science objective, then there does not appear to be an advantage of GPU-\\n\\t\\t    based solution versus a \\n\\t\\t    CPU-based solution.  If it is not sufficient, then a GPU-based solution may enable \\n\\t\\t    improvement of the fidelity of your simulations.`\r\n          \r\n            //Below string is shown if iofrq is greater than 100\r\n          const False2 = `GPU’s are designed for computationally heavy problems.You indicated that you perform approximately ${volume} Mbytes of disk I/O every ${frequency} seconds. A significant percentage of time for your application will likely be spent moving data from the GPU memory to the disk subsystem. What can I do about this? Can you reduce the amount of I/O that your application performs`\r\n          //Below string is shown if rate is chosen\r\n          const False3 = `You indicated that your problem has a [[strong, moderate, weak} ${answer2} limitation. \\n\\t\\t    While GPU-based computing can successfully be used for both rate and throughput \\n\\t\\t    computing tasks, it frequently does better for throughput based computing.`\r\n\r\n\r\n          let num = 0//This variables is used to create an ordered list for the output. \r\n          //num increments as the number of \"No\"s chosen by the user go up\r\n        \r\n          if ( division > 50 && iof < 100 && answer2 == \"throughput\"){ \r\n            //if division result is greater than 50, iofreq is less than 100 and throuhgput is chosen, \"start1\", \"True1\" and \"True2\" are concatenated\r\n            result = start1 + \"\\n\\t\" + \"a. \" + True1 + \"\\n\\t\"+ \"b. \"+ True2\r\n          }\r\n          else{\r\n            //if division result is less than 50 OR iofreq is greater than 100 OR rate is chosen, then \"start2\" is set to the empty \"result\" string\r\n            result = start2 \r\n          }\r\n\r\n          if (division < 50){\r\n            //if division is less than 50, num is incremented and concatenated to the result string alog with \"False1\" \r\n            num +=1\r\n            result += \"\\n\\t\"+ num + \". \" + False1\r\n          }\r\n\r\n          if (iof > 100){\r\n             //if iofreq is greater than 100, num is incremented and concatenated to the result string alog with \"False2\" \r\n            num +=1\r\n            result += \"\\n\\t\"+ num + \". \" + False2\r\n          }\r\n\r\n          if(answer2 == \"rate\"){\r\n             //if rate is chosen, num is incremented and concatenated to the result string alog with \"False3\" \r\n            num +=1\r\n            result += \"\\n\\t\"+ num + \". \" + False3\r\n          }\r\n\r\n\r\n          setDivisionResult(division); //This statement assigns \"division\" variable to the \"divisionResult\" variable\r\n          localStorage.setItem('divisionResult', division); //This line stores \"division\" in local storage so it can be retrieved and displayed in the summary page. \r\n          setIOfreq(iof);//This statement assigns \"iof\" variable to the \"iofreq\" variable\r\n          localStorage.setItem('iofreq', iof);//This line stores \"iof\" in local storage so it can be retrieved and displayed in the summary page. \r\n          setResultMessage2 (result);//This statement assigns \"result\" variable to the \"ResultMessage2\" variable\r\n          localStorage.setItem('resultMessage2', result); //This line stores \"result\" in local storage so it can be retrieved and displayed in the summary page. \r\n          navigate('/page2'); // This line of code is used to navigate to page 2\r\n        }\r\n\r\n        \r\n        \r\n      } else{\r\n        \r\n        alert('Please answer all questions.');//This message is shown when the user does not answer all the questions\r\n      }\r\n\r\n\r\n      \r\n    \r\n    e.preventDefault();\r\n  };\r\n\r\n\r\n// Function to clear options and reset the form\r\n  const clearOptions = (e) => {\r\n    e.preventDefault();\r\n    setAnswer2('');\r\n    setDivisionResult(\"\");\r\n    setResultMessage2 (\"\");\r\n    setInputOne(\"\")\r\n    setInputTwo(\"\")\r\n    setVolume(\"\")\r\n    setFrequency(\"\")\r\n\r\n  };\r\n\r\n  function handleOnClick2(event) {\r\n    navigate('/page0'); // Function to navigate back to the home page\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storedVolume = localStorage.getItem('IOVolume') || '';\r\n    const storedFrequency = localStorage.getItem('IOFrequency') || '';\r\n    const storedAnswer2 = localStorage.getItem('RateThroughput') || '';\r\n    const storedInputOne = localStorage.getItem('InputOne') || '';\r\n    const storedInputTwo = localStorage.getItem('InputTwo') || '';\r\n\r\n    setVolume(storedVolume);\r\n    setFrequency(storedFrequency);\r\n    setAnswer2(storedAnswer2);\r\n    setInputOne(storedInputOne);\r\n    setInputTwo(storedInputTwo);\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div style = {{ alignment : \"center\"}}>\r\n      \r\n\r\n      <form onSubmit={handleSubmit}>\r\n      <CustomBox>\r\n        <div>\r\n                    \r\n          <div>\r\n            <ol>\r\n              {/*Question 1 - Independent grid points per run*/}\r\n              <li>Determine the following:</li>\r\n              \r\n            \r\n            </ol>\r\n          </div>\r\n          \r\n          <ol start={2}>\r\n           {/*Question 1 - input1*/}\r\n          <label>Total number of independent grid-points: <br></br>\r\n        <input\r\n          type=\"text\"\r\n          value={inputOne}\r\n          onChange={handleInputChange}\r\n          name=\"inputOne\"\r\n          \r\n        /></label>\r\n        <br />\r\n        <br />\r\n         {/*Question 1 - input2*/}\r\n        <label>Number of &#123;node, GPU&#125;: per run: <br></br>\r\n        <input\r\n          type=\"text\"\r\n          value={inputTwo}\r\n          name=\"inputTwo\"\r\n          onChange= {handleInputChange}\r\n        /></label>\r\n        <br />\r\n        <br />\r\n            <li><div style={{ display: 'flex', alignItems: 'center' }}>\r\n               {/*Question 2 - I/O Frequency*/}\r\n                What is the volume and frequency of I/O?\r\n                <CustomTooltip title=\"Best explanation you can find for I/O frequency and Volume\" placement=\"right\" />\r\n              </div></li>\r\n              {/*Question 2 input1 - volume*/}\r\n              <label>Volume:<br></br>\r\n              <input\r\n                type=\"text\"\r\n                name=\"volume\"\r\n                value={volume}\r\n                onChange={handleInputChange}\r\n              /> <br></br><br></br>\r\n              </label>\r\n       \r\n\r\n            <label>\r\n              {/*Question 2 input1 - frequency*/}\r\n              Frequency:<br></br>\r\n              <input\r\n                type=\"text\"\r\n                name=\"frequency\"\r\n                value={frequency}\r\n                onChange={handleInputChange}\r\n              />\r\n            </label>\r\n            <br></br><br></br>\r\n            <li><div style={{ display: 'flex', alignItems: 'center' }}>\r\n\r\n                {/*Question 3 - rate or throughput*/}\r\n                Do you have rate or throughput limitations?\r\n                <CustomTooltip title=\"A really good explanation of rate and throughput\" placement=\"right\" />\r\n              </div></li> \r\n            <br></br>\r\n            <div id=\"options2\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"answer2\"\r\n                  value=\"rate\"\r\n                  checked={answer2 === 'rate'}\r\n                  onChange={handleInputChange}\r\n                />{' '}\r\n                Rate\r\n              </label>\r\n              <label style = {{marginLeft: \"60px\"}}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"answer2\"\r\n                  value=\"throughput\"\r\n                  checked={answer2 === 'throughput'}\r\n                  onChange={handleInputChange}\r\n                />{' '}\r\n                Throughput\r\n              </label> \r\n              <br></br>\r\n            </div>\r\n          </ol>\r\n        \r\n        </div><br></br>\r\n        </CustomBox>\r\n        <div style = {{marginLeft: \"253.5px\"}}>\r\n        <Button text=\" Back \" onClick={handleOnClick2}  />\r\n        \r\n        <Button text = \"Clear\" onClick = {clearOptions} style ={{ marginLeft : \"10px\" , marginRight:\"10px\"}} />{/*Clear Button*/}\r\n        <Button text=\"Next\"/> {/*Submit Button*/}\r\n        \r\n        </div>\r\n        </form><br></br>\r\n\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentExercise1;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,WAAW;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAAQC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAO,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAACyB,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;EAChF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAACyB,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;EAChF,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC+B,MAAM,EAAEC,SAAS,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMiC,SAAS,GAAG,EAAE;EACpB,MAAMC,QAAQ,GAAG3B,WAAW,CAAC,CAAC;;EAI/B;EACC,MAAM4B,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC,IAAIF,IAAI,KAAK,QAAQ,EAAE;MACrBjB,SAAS,CAACkB,KAAK,CAAC;MAChBb,YAAY,CAACe,OAAO,CAAC,UAAU,EAAEF,KAAK,CAAC;IACzC,CAAC,MAAM,IAAID,IAAI,KAAK,WAAW,EAAE;MAC/Bf,YAAY,CAACgB,KAAK,CAAC;MACnBb,YAAY,CAACe,OAAO,CAAC,aAAa,EAAEF,KAAK,CAAC;IAC5C,CAAC,MAAM,IAAID,IAAI,KAAK,SAAS,EAAE;MAC7BvB,UAAU,CAACwB,KAAK,CAAC;MACjBb,YAAY,CAACe,OAAO,CAAC,gBAAgB,EAAEF,KAAK,CAAC;IAC/C,CAAC,MAAM,IAAID,IAAI,KAAK,UAAU,EAAE;MAC9Bb,WAAW,CAACc,KAAK,CAAC;MAClBb,YAAY,CAACe,OAAO,CAAC,UAAU,EAAEF,KAAK,CAAC;IACzC,CAAC,MAAM,IAAID,IAAI,KAAK,UAAU,EAAE;MAC9BT,WAAW,CAACU,KAAK,CAAC;MAClBb,YAAY,CAACe,OAAO,CAAC,UAAU,EAAEF,KAAK,CAAC;IAEzC;EACF,CAAC;;EAMH;EACA;;EAEE,MAAMG,YAAY,GAAIL,CAAC,IAAK;IAIxB,IAAIb,QAAQ,IAAII,QAAQ,IAAIR,MAAM,IAAIE,SAAS,IAAIR,OAAO,EAAE;MAAC;MAC3DG,YAAY,CAAC,IAAI,CAAC;MAGlB,MAAM0B,CAAC,GAAGC,UAAU,CAACpB,QAAQ,CAAC,CAAC,CAAC;MAChC,MAAMqB,CAAC,GAAGD,UAAU,CAAChB,QAAQ,CAAC;MAC9B,MAAMkB,CAAC,GAAGF,UAAU,CAACxB,MAAM,CAAC;MAC5B,MAAM2B,CAAC,GAAGH,UAAU,CAACtB,SAAS,CAAC;MAE/B,IAAI,CAAC0B,KAAK,CAACL,CAAC,CAAC,IAAI,CAACK,KAAK,CAACH,CAAC,CAAC,IAAI,CAACG,KAAK,CAACF,CAAC,CAAC,IAAI,CAACE,KAAK,CAACD,CAAC,CAAC,EAAC;QACnD,MAAME,QAAQ,GAAGN,CAAC,GAAGE,CAAC,CAAC,CAAC;QACxB,MAAMK,GAAG,GAAGJ,CAAC,GAAGC,CAAC,CAAC,CAAC;;QAGnB,IAAII,MAAM,GAAG,EAAE,EAAC;;QAEhB;QACA,MAAMC,MAAM,GAAI,sJAAqJ;QACrK;QACA,MAAMC,KAAK,GAAI,gCAA+BvB,cAAe,6GAA4GI,SAAU,sBAAqB;;QAExM;QACA,MAAMoB,KAAK,GAAI,wGAAuGlC,MAAO,6BAA4BE,SAAU,6MAA4M;;QAG/W;QACA,MAAMiC,MAAM,GAAI,6JAA4J;;QAE5K;QACA,MAAMC,MAAM,GAAI,2DAA0D1B,cAAe,6EAA4EI,SAAU,6fAA4f;;QAEzqB;QACF,MAAMuB,MAAM,GAAI,sGAAqGrC,MAAO,6BAA4BE,SAAU,uOAAsO;QACxY;QACA,MAAMoC,MAAM,GAAI,mEAAkE5C,OAAQ,6LAA4L;QAGtR,IAAI6C,GAAG,GAAG,CAAC;QACX;;QAEA,IAAKV,QAAQ,GAAG,EAAE,IAAIC,GAAG,GAAG,GAAG,IAAIpC,OAAO,IAAI,YAAY,EAAC;UACzD;UACAqC,MAAM,GAAGC,MAAM,GAAG,MAAM,GAAG,KAAK,GAAGC,KAAK,GAAG,MAAM,GAAE,KAAK,GAAEC,KAAK;QACjE,CAAC,MACG;UACF;UACAH,MAAM,GAAGI,MAAM;QACjB;QAEA,IAAIN,QAAQ,GAAG,EAAE,EAAC;UAChB;UACAU,GAAG,IAAG,CAAC;UACPR,MAAM,IAAI,MAAM,GAAEQ,GAAG,GAAG,IAAI,GAAGH,MAAM;QACvC;QAEA,IAAIN,GAAG,GAAG,GAAG,EAAC;UACX;UACDS,GAAG,IAAG,CAAC;UACPR,MAAM,IAAI,MAAM,GAAEQ,GAAG,GAAG,IAAI,GAAGF,MAAM;QACvC;QAEA,IAAG3C,OAAO,IAAI,MAAM,EAAC;UAClB;UACD6C,GAAG,IAAG,CAAC;UACPR,MAAM,IAAI,MAAM,GAAEQ,GAAG,GAAG,IAAI,GAAGD,MAAM;QACvC;QAGA3B,iBAAiB,CAACkB,QAAQ,CAAC,CAAC,CAAC;QAC7BvB,YAAY,CAACe,OAAO,CAAC,gBAAgB,EAAEQ,QAAQ,CAAC,CAAC,CAAC;QAClDhB,SAAS,CAACiB,GAAG,CAAC,CAAC;QACfxB,YAAY,CAACe,OAAO,CAAC,QAAQ,EAAES,GAAG,CAAC,CAAC;QACpC/B,iBAAiB,CAAEgC,MAAM,CAAC,CAAC;QAC3BzB,YAAY,CAACe,OAAO,CAAC,gBAAgB,EAAEU,MAAM,CAAC,CAAC,CAAC;QAChDhB,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACtB;IAIF,CAAC,MAAK;MAEJyB,KAAK,CAAC,8BAA8B,CAAC,CAAC;IACxC;;IAKFvB,CAAC,CAACwB,cAAc,CAAC,CAAC;EACpB,CAAC;;EAGH;EACE,MAAMC,YAAY,GAAIzB,CAAC,IAAK;IAC1BA,CAAC,CAACwB,cAAc,CAAC,CAAC;IAClB9C,UAAU,CAAC,EAAE,CAAC;IACdgB,iBAAiB,CAAC,EAAE,CAAC;IACrBZ,iBAAiB,CAAE,EAAE,CAAC;IACtBM,WAAW,CAAC,EAAE,CAAC;IACfI,WAAW,CAAC,EAAE,CAAC;IACfR,SAAS,CAAC,EAAE,CAAC;IACbE,YAAY,CAAC,EAAE,CAAC;EAElB,CAAC;EAED,SAASwC,cAAcA,CAACC,KAAK,EAAE;IAC7B7B,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EACtB;EAAC;EAEDjC,SAAS,CAAC,MAAM;IACd,MAAM+D,YAAY,GAAGvC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE;IAC3D,MAAMuC,eAAe,GAAGxC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE;IACjE,MAAMwC,aAAa,GAAGzC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE;IAClE,MAAMyC,cAAc,GAAG1C,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE;IAC7D,MAAM0C,cAAc,GAAG3C,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE;IAE7DN,SAAS,CAAC4C,YAAY,CAAC;IACvB1C,YAAY,CAAC2C,eAAe,CAAC;IAC7BnD,UAAU,CAACoD,aAAa,CAAC;IACzB1C,WAAW,CAAC2C,cAAc,CAAC;IAC3BvC,WAAW,CAACwC,cAAc,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAIN,oBACE1D,OAAA;IAAK2D,KAAK,EAAI;MAAEC,SAAS,EAAG;IAAQ,CAAE;IAAAC,QAAA,gBAGpC7D,OAAA;MAAM8D,QAAQ,EAAE/B,YAAa;MAAA8B,QAAA,gBAC7B7D,OAAA,CAACF,SAAS;QAAA+D,QAAA,gBACR7D,OAAA;UAAA6D,QAAA,gBAEE7D,OAAA;YAAA6D,QAAA,eACE7D,OAAA;cAAA6D,QAAA,eAEE7D,OAAA;gBAAA6D,QAAA,EAAI;cAAwB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAG/B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eAENlE,OAAA;YAAImE,KAAK,EAAE,CAAE;YAAAN,QAAA,gBAEb7D,OAAA;cAAA6D,QAAA,GAAO,2CAAyC,eAAA7D,OAAA;gBAAA+D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC3DlE,OAAA;gBACEoE,IAAI,EAAC,MAAM;gBACXxC,KAAK,EAAEf,QAAS;gBAChBwD,QAAQ,EAAE5C,iBAAkB;gBAC5BE,IAAI,EAAC;cAAU;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEhB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACVlE,OAAA;cAAA+D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNlE,OAAA;cAAA+D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAENlE,OAAA;cAAA6D,QAAA,GAAO,kCAA0C,eAAA7D,OAAA;gBAAA+D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1DlE,OAAA;gBACEoE,IAAI,EAAC,MAAM;gBACXxC,KAAK,EAAEX,QAAS;gBAChBU,IAAI,EAAC,UAAU;gBACf0C,QAAQ,EAAG5C;cAAkB;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACVlE,OAAA;cAAA+D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNlE,OAAA;cAAA+D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACFlE,OAAA;cAAA6D,QAAA,eAAI7D,OAAA;gBAAK2D,KAAK,EAAE;kBAAEW,OAAO,EAAE,MAAM;kBAAEC,UAAU,EAAE;gBAAS,CAAE;gBAAAV,QAAA,GACvB,0CAE/B,eAAA7D,OAAA,CAACR,aAAa;kBAACgF,KAAK,EAAC,4DAA4D;kBAACC,SAAS,EAAC;gBAAO;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAEXlE,OAAA;cAAA6D,QAAA,GAAO,SAAO,eAAA7D,OAAA;gBAAA+D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACvBlE,OAAA;gBACEoE,IAAI,EAAC,MAAM;gBACXzC,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAEnB,MAAO;gBACd4D,QAAQ,EAAE5C;cAAkB;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7B,CAAC,KAAC,eAAAlE,OAAA;gBAAA+D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAAAlE,OAAA;gBAAA+D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd,CAAC,eAGVlE,OAAA;cAAA6D,QAAA,GACqC,YACzB,eAAA7D,OAAA;gBAAA+D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACnBlE,OAAA;gBACEoE,IAAI,EAAC,MAAM;gBACXzC,IAAI,EAAC,WAAW;gBAChBC,KAAK,EAAEjB,SAAU;gBACjB0D,QAAQ,EAAE5C;cAAkB;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC,eACRlE,OAAA;cAAA+D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAAAlE,OAAA;cAAA+D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAClBlE,OAAA;cAAA6D,QAAA,eAAI7D,OAAA;gBAAK2D,KAAK,EAAE;kBAAEW,OAAO,EAAE,MAAM;kBAAEC,UAAU,EAAE;gBAAS,CAAE;gBAAAV,QAAA,GAEjB,6CAErC,eAAA7D,OAAA,CAACR,aAAa;kBAACgF,KAAK,EAAC,kDAAkD;kBAACC,SAAS,EAAC;gBAAO;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACblE,OAAA;cAAA+D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTlE,OAAA;cAAK0E,EAAE,EAAC,UAAU;cAAAb,QAAA,gBAChB7D,OAAA;gBAAA6D,QAAA,gBACE7D,OAAA;kBACEoE,IAAI,EAAC,OAAO;kBACZzC,IAAI,EAAC,SAAS;kBACdC,KAAK,EAAC,MAAM;kBACZ+C,OAAO,EAAExE,OAAO,KAAK,MAAO;kBAC5BkE,QAAQ,EAAE5C;gBAAkB;kBAAAsC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7B,CAAC,EAAC,GAAG,EAAC,MAET;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRlE,OAAA;gBAAO2D,KAAK,EAAI;kBAACiB,UAAU,EAAE;gBAAM,CAAE;gBAAAf,QAAA,gBACnC7D,OAAA;kBACEoE,IAAI,EAAC,OAAO;kBACZzC,IAAI,EAAC,SAAS;kBACdC,KAAK,EAAC,YAAY;kBAClB+C,OAAO,EAAExE,OAAO,KAAK,YAAa;kBAClCkE,QAAQ,EAAE5C;gBAAkB;kBAAAsC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7B,CAAC,EAAC,GAAG,EAAC,YAET;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRlE,OAAA;gBAAA+D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEF,CAAC,eAAAlE,OAAA;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACZlE,OAAA;QAAK2D,KAAK,EAAI;UAACiB,UAAU,EAAE;QAAS,CAAE;QAAAf,QAAA,gBACtC7D,OAAA,CAACP,MAAM;UAACoF,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAE1B;QAAe;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAElDlE,OAAA,CAACP,MAAM;UAACoF,IAAI,EAAG,OAAO;UAACC,OAAO,EAAI3B,YAAa;UAACQ,KAAK,EAAG;YAAEiB,UAAU,EAAG,MAAM;YAAGG,WAAW,EAAC;UAAM;QAAE;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvGlE,OAAA,CAACP,MAAM;UAACoF,IAAI,EAAC;QAAM;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAAAlE,OAAA;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIf,CAAC;AAEV,CAAC;AAAChE,EAAA,CA9RID,gBAAgB;EAAA,QAYHJ,WAAW;AAAA;AAAAmF,EAAA,GAZxB/E,gBAAgB;AAgStB,eAAeA,gBAAgB;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}