{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dixita\\\\projects\\\\NCAR-Project6\\\\src\\\\StudentExercise1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CustomTooltip from './ToolTip';\nimport Button from './Button';\nimport Summary from './summary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentExercise1 = () => {\n  _s();\n  const [answer2, setAnswer2] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [resultMessage, setResultMessage] = useState('');\n  const [volume, setVolume] = useState('');\n  const [frequency, setFrequency] = useState('');\n  const [inputOne, setInputOne] = useState('');\n  const [inputTwo, setInputTwo] = useState('');\n  const [divisionResult, setDivisionResult] = useState('');\n  const threshold = 50;\n  const handleCalculation = () => {\n    const x = parseFloat(inputOne);\n    const y = parseFloat(inputTwo);\n    if (!isNaN(x) && !isNaN(y)) {\n      const division = x / y;\n      setDivisionResult(division);\n      localStorage.setItem('divisionResult', division);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'volume') {\n      setVolume(value);\n      localStorage.setItem('IOVolume', value);\n    } else if (name === 'frequency') {\n      setFrequency(value);\n      localStorage.setItem('IOFrequency', value);\n    } else if (name === 'answer2') {\n      setAnswer2(value);\n      localStorage.setItem('RateThroughput', value);\n    }\n  };\n  const handleSubmit = e => {\n    handleCalculation();\n    if (divisionResult) {\n      if (volume && frequency && answer2) {\n        setSubmitted(true);\n        const start1 = `Based on your input, it appears that your science objective is amenable to GPU-based computing.  This assessment is based on several of your answers:`;\n        constTrue1 = \"The number of grid points of\" + str(inputOne) + \" per GPU or node is sufficient.  Typically, a GPU based computing solution requires in excessive of\" + str(threshold) + \" grid points per GPU\";\n        constTrue2 = `GPU’s are designed for computationally heavy problems.  You indicated that you perform approximately ${volume} Mbytes of disk I/O every ${frequency} seconds.It sounds like a significant percentage of time for your application is spent performing computations. This is necessary but not sufficient condition for the efficient use of GPU-based computing.`;\n        const start2 = `Based on your input, it does not appear that your science objective is amenable to GPU-based computing.  This assessment is based on several of your answers`;\n        constFalse1 = `The number of grid points per GPU or node is rather low ${inputOne}.Typically, a GPU based computing solution requires in excess of ${threshold} grid points per GPU.\n        i. What can I do about this?  \n          1. Is the size of your problem sufficient to address your science objective or is it a limitation of your existing compute solution. If it is sufficient to address your science objective, then there does not appear to be an advantage of GPU-based solution versus a CPU-based solution.  If it is not sufficient, then a GPU-based solution may enable improvement of the fidelity of your simulations.`;\n        constFalse2 = `GPU’s are designed for computationally heavy problems.  You indicated that you perform approximately ${volume} Mbytes of disk I/O every ${frequency} seconds. A significant percentage of time for your application will likely be spent moving data from the GPU memory to the disk subsystem.\n        What can I do about this?\n        Can you reduce the amount of I/O that your application performs`;\n        constFalse3 = `You indicated that your problem has a [[strong, moderate, weak} ${answer2} limitation. While GPU-based computing can successfully be used for both rate and throughput computing tasks, it frequently does better for throughput based computing.`;\n        if (answer == \"yes\" && answer2 == \"yes\" && answer3 == \"yes\" && answer4 == \"yes\") {\n          result = start1 + \" \";\n        } else {\n          result += start2 + \" \";\n        }\n        if (answer == \"no\") {\n          num += 1;\n          result += \"\\n\" + num + \". \" + string1;\n        }\n        if (answer2 == \"no\") {\n          num += 1;\n          result += \"\\n\" + num + \". \" + string2;\n        }\n        if (answer3 == \"no\") {\n          num += 1;\n          result += \"\\n\" + num + \". \" + string3;\n        }\n        if (answer4 == \"no\") {\n          num += 1;\n          result += \"\\n\" + num + \". \" + string4;\n        }\n      } else {\n        alert('Please answer all questions.');\n      }\n    }\n    e.preventDefault();\n  };\n  const clearOptions = e => {\n    e.preventDefault();\n    setAnswer2('');\n    setDivisionResult(\"\");\n    setResultMessage(\"\");\n    setInputOne(\"\");\n    setInputTwo(\"\");\n    setVolume(\"\");\n    setFrequency(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Determine the following:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          start: 2,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Total number of independent grid-points: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 59\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputOne,\n              onChange: e => setInputOne(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Number of {node, GPU}: per run: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 58\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputTwo,\n              onChange: e => setInputTwo(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"What is the volume and frequency of I/O?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 62\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Volume:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"volume\",\n              value: volume,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Frequency:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"frequency\",\n              value: frequency,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [\"Do you have rate or throughput limitations?\", /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"options2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"answer2\",\n                value: \"rate\",\n                checked: answer2 === 'rate',\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), ' ', \"Rate\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"answer2\",\n                value: \"throughput\",\n                checked: answer2 === 'throughput',\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), ' ', \"Throughput\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Clear\",\n        onClick: clearOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentExercise1, \"HhL3VrlxCuDw1sHKQ3LC/3b+qYM=\");\n_c = StudentExercise1;\nexport default StudentExercise1;\nvar _c;\n$RefreshReg$(_c, \"StudentExercise1\");","map":{"version":3,"names":["React","useState","useEffect","CustomTooltip","Button","Summary","jsxDEV","_jsxDEV","StudentExercise1","_s","answer2","setAnswer2","submitted","setSubmitted","resultMessage","setResultMessage","volume","setVolume","frequency","setFrequency","inputOne","setInputOne","inputTwo","setInputTwo","divisionResult","setDivisionResult","threshold","handleCalculation","x","parseFloat","y","isNaN","division","localStorage","setItem","handleInputChange","e","name","value","target","handleSubmit","start1","constTrue1","str","constTrue2","start2","constFalse1","constFalse2","constFalse3","answer","answer3","answer4","result","num","string1","string2","string3","string4","alert","preventDefault","clearOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","start","type","onChange","style","display","alignItems","id","checked","text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dixita/projects/NCAR-Project6/src/StudentExercise1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CustomTooltip from './ToolTip';\r\nimport Button from './Button';\r\nimport Summary from './summary';\r\n\r\n\r\nconst StudentExercise1 = () => {\r\n  const [answer2, setAnswer2] = useState('');\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [resultMessage, setResultMessage] = useState('');\r\n  const [volume, setVolume] = useState('');\r\n  const [frequency, setFrequency] = useState('');\r\n  const [inputOne, setInputOne] = useState('');\r\n  const [inputTwo, setInputTwo] = useState('');\r\n  const [divisionResult, setDivisionResult] = useState('');\r\n\r\n  const threshold = 50;\r\n \r\n\r\n  const handleCalculation = () => {\r\n    const x = parseFloat(inputOne);\r\n    const y = parseFloat(inputTwo);\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      const division = x / y;\r\n      setDivisionResult(division);\r\n      localStorage.setItem('divisionResult', division);\r\n    }\r\n};\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'volume') {\r\n      setVolume(value);\r\n      localStorage.setItem('IOVolume', value);\r\n    } else if (name === 'frequency') {\r\n      setFrequency(value);\r\n      localStorage.setItem('IOFrequency', value);\r\n    } else if (name === 'answer2') {\r\n      setAnswer2(value);\r\n      localStorage.setItem('RateThroughput', value);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    handleCalculation()\r\n    if (divisionResult){\r\n      if (volume && frequency && answer2) {\r\n        setSubmitted(true);\r\n\r\n        const start1 = `Based on your input, it appears that your science objective is amenable to GPU-based computing.  This assessment is based on several of your answers:`\r\n        constTrue1 = \"The number of grid points of\" + str(inputOne) + \" per GPU or node is sufficient.  Typically, a GPU based computing solution requires in excessive of\" + str(threshold) + \" grid points per GPU\"\r\n\r\n        constTrue2 = `GPU’s are designed for computationally heavy problems.  You indicated that you perform approximately ${volume} Mbytes of disk I/O every ${frequency} seconds.It sounds like a significant percentage of time for your application is spent performing computations. This is necessary but not sufficient condition for the efficient use of GPU-based computing.`\r\n        const start2 = `Based on your input, it does not appear that your science objective is amenable to GPU-based computing.  This assessment is based on several of your answers`\r\n        constFalse1 = `The number of grid points per GPU or node is rather low ${inputOne}.Typically, a GPU based computing solution requires in excess of ${threshold} grid points per GPU.\r\n        i. What can I do about this?  \r\n          1. Is the size of your problem sufficient to address your science objective or is it a limitation of your existing compute solution. If it is sufficient to address your science objective, then there does not appear to be an advantage of GPU-based solution versus a CPU-based solution.  If it is not sufficient, then a GPU-based solution may enable improvement of the fidelity of your simulations.`\r\n        \r\n        constFalse2 = `GPU’s are designed for computationally heavy problems.  You indicated that you perform approximately ${volume} Mbytes of disk I/O every ${frequency} seconds. A significant percentage of time for your application will likely be spent moving data from the GPU memory to the disk subsystem.\r\n        What can I do about this?\r\n        Can you reduce the amount of I/O that your application performs`\r\n        constFalse3 = `You indicated that your problem has a [[strong, moderate, weak} ${answer2} limitation. While GPU-based computing can successfully be used for both rate and throughput computing tasks, it frequently does better for throughput based computing.`\r\n\r\n        \r\n        if (answer == \"yes\" && answer2 == \"yes\" && answer3 == \"yes\" && answer4 == \"yes\"){\r\n          result = start1 + \" \" \r\n        }\r\n        else{\r\n          result += start2 + \" \"\r\n        }\r\n  \r\n        if(answer == \"no\"){\r\n          num += 1\r\n          result += \"\\n\"+ num + \". \" + string1\r\n        }\r\n  \r\n        if(answer2 == \"no\"){\r\n          num += 1\r\n          result += \"\\n\"+ num + \". \" + string2\r\n        }\r\n        if(answer3 == \"no\"){\r\n          num += 1\r\n          result += \"\\n\"+ num + \". \" + string3\r\n        }\r\n        if(answer4 == \"no\"){\r\n          num += 1\r\n          result += \"\\n\"+ num + \". \" + string4\r\n        }\r\n        \r\n        \r\n      } else {\r\n        alert('Please answer all questions.');\r\n    }\r\n  }\r\n    e.preventDefault();\r\n  };\r\n\r\n\r\n\r\n  const clearOptions = (e) => {\r\n    e.preventDefault();\r\n    setAnswer2('');\r\n    setDivisionResult(\"\");\r\n    setResultMessage (\"\");\r\n    setInputOne(\"\")\r\n    setInputTwo(\"\")\r\n    setVolume(\"\")\r\n    setFrequency(\"\")\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n      <ol>\r\n        <li>Determine the following:</li>\r\n        \r\n       \r\n      </ol>\r\n    </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          \r\n          <ol start={2}>\r\n          <label>Total number of independent grid-points: <br></br>\r\n        <input\r\n          type=\"text\"\r\n          value={inputOne}\r\n          onChange={(e) => setInputOne(e.target.value)}\r\n          \r\n        /></label>\r\n        <br />\r\n        <br />\r\n        <label>Number of &#123;node, GPU&#125;: per run: <br></br>\r\n        <input\r\n          type=\"text\"\r\n          value={inputTwo}\r\n          onChange={(e) => setInputTwo(e.target.value)}\r\n        /></label>\r\n        <br />\r\n        <br />\r\n            <li>What is the volume and frequency of I/O?</li><br></br>\r\n           \r\n              <label>Volume:<br></br>\r\n              <input\r\n                type=\"text\"\r\n                name=\"volume\"\r\n                value={volume}\r\n                onChange={handleInputChange}\r\n              /> <br></br><br></br>\r\n              </label>\r\n       \r\n\r\n            <label>\r\n              Frequency:<br></br>\r\n              <input\r\n                type=\"text\"\r\n                name=\"frequency\"\r\n                value={frequency}\r\n                onChange={handleInputChange}\r\n              />\r\n            </label>\r\n            <br></br>\r\n            <li><div style={{ display: 'flex', alignItems: 'center' }}>\r\n                Do you have rate or throughput limitations?\r\n                <CustomTooltip />\r\n              </div></li> \r\n            <br></br>\r\n            <div id=\"options2\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"answer2\"\r\n                  value=\"rate\"\r\n                  checked={answer2 === 'rate'}\r\n                  onChange={handleInputChange}\r\n                />{' '}\r\n                Rate\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"answer2\"\r\n                  value=\"throughput\"\r\n                  checked={answer2 === 'throughput'}\r\n                  onChange={handleInputChange}\r\n                />{' '}\r\n                Throughput\r\n              </label> \r\n              <br></br>\r\n            </div>\r\n          </ol>\r\n        </div><br></br>\r\n\r\n       \r\n        <Button text=\"Submit\"/>\r\n        <Button text = \"Clear\" onClick = {clearOptions} />\r\n        </form><br></br>\r\n        {/*<button type=\"button\" style={{ marginLeft: '100px' }} onClick={clearOptions}>\r\n          Clear\r\n  </button>\r\n     \r\n      {showAnswers && (\r\n        <div style={{ marginLeft: '40px' }}>\r\n          <div id=\"ans\">\r\n            Your Answers:\r\n            <br />\r\n            \r\n            <p>{divisionResult},{answer}, {answer2}</p>\r\n          </div>\r\n         \r\n          <div id=\"result2\">{resultMessage}</div><br></br>\r\n      </div>*/}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentExercise1;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,WAAW;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMyB,SAAS,GAAG,EAAE;EAGpB,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,CAAC,GAAGC,UAAU,CAACT,QAAQ,CAAC;IAC9B,MAAMU,CAAC,GAAGD,UAAU,CAACP,QAAQ,CAAC;IAE9B,IAAI,CAACS,KAAK,CAACH,CAAC,CAAC,IAAI,CAACG,KAAK,CAACD,CAAC,CAAC,EAAE;MAC1B,MAAME,QAAQ,GAAGJ,CAAC,GAAGE,CAAC;MACtBL,iBAAiB,CAACO,QAAQ,CAAC;MAC3BC,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEF,QAAQ,CAAC;IAClD;EACJ,CAAC;EAEC,MAAMG,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC,IAAIF,IAAI,KAAK,QAAQ,EAAE;MACrBpB,SAAS,CAACqB,KAAK,CAAC;MAChBL,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEI,KAAK,CAAC;IACzC,CAAC,MAAM,IAAID,IAAI,KAAK,WAAW,EAAE;MAC/BlB,YAAY,CAACmB,KAAK,CAAC;MACnBL,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEI,KAAK,CAAC;IAC5C,CAAC,MAAM,IAAID,IAAI,KAAK,SAAS,EAAE;MAC7B1B,UAAU,CAAC2B,KAAK,CAAC;MACjBL,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEI,KAAK,CAAC;IAC/C;EACF,CAAC;EAID,MAAME,YAAY,GAAIJ,CAAC,IAAK;IAC1BT,iBAAiB,CAAC,CAAC;IACnB,IAAIH,cAAc,EAAC;MACjB,IAAIR,MAAM,IAAIE,SAAS,IAAIR,OAAO,EAAE;QAClCG,YAAY,CAAC,IAAI,CAAC;QAElB,MAAM4B,MAAM,GAAI,uJAAsJ;QACtKC,UAAU,GAAG,8BAA8B,GAAGC,GAAG,CAACvB,QAAQ,CAAC,GAAG,qGAAqG,GAAGuB,GAAG,CAACjB,SAAS,CAAC,GAAG,sBAAsB;QAE7MkB,UAAU,GAAI,wGAAuG5B,MAAO,6BAA4BE,SAAU,8MAA6M;QAC/W,MAAM2B,MAAM,GAAI,8JAA6J;QAC7KC,WAAW,GAAI,2DAA0D1B,QAAS,oEAAmEM,SAAU;AACvK;AACA,uZAAuZ;QAE/YqB,WAAW,GAAI,wGAAuG/B,MAAO,6BAA4BE,SAAU;AAC3K;AACA,wEAAwE;QAChE8B,WAAW,GAAI,mEAAkEtC,OAAQ,yKAAwK;QAGjQ,IAAIuC,MAAM,IAAI,KAAK,IAAIvC,OAAO,IAAI,KAAK,IAAIwC,OAAO,IAAI,KAAK,IAAIC,OAAO,IAAI,KAAK,EAAC;UAC9EC,MAAM,GAAGX,MAAM,GAAG,GAAG;QACvB,CAAC,MACG;UACFW,MAAM,IAAIP,MAAM,GAAG,GAAG;QACxB;QAEA,IAAGI,MAAM,IAAI,IAAI,EAAC;UAChBI,GAAG,IAAI,CAAC;UACRD,MAAM,IAAI,IAAI,GAAEC,GAAG,GAAG,IAAI,GAAGC,OAAO;QACtC;QAEA,IAAG5C,OAAO,IAAI,IAAI,EAAC;UACjB2C,GAAG,IAAI,CAAC;UACRD,MAAM,IAAI,IAAI,GAAEC,GAAG,GAAG,IAAI,GAAGE,OAAO;QACtC;QACA,IAAGL,OAAO,IAAI,IAAI,EAAC;UACjBG,GAAG,IAAI,CAAC;UACRD,MAAM,IAAI,IAAI,GAAEC,GAAG,GAAG,IAAI,GAAGG,OAAO;QACtC;QACA,IAAGL,OAAO,IAAI,IAAI,EAAC;UACjBE,GAAG,IAAI,CAAC;UACRD,MAAM,IAAI,IAAI,GAAEC,GAAG,GAAG,IAAI,GAAGI,OAAO;QACtC;MAGF,CAAC,MAAM;QACLC,KAAK,CAAC,8BAA8B,CAAC;MACzC;IACF;IACEtB,CAAC,CAACuB,cAAc,CAAC,CAAC;EACpB,CAAC;EAID,MAAMC,YAAY,GAAIxB,CAAC,IAAK;IAC1BA,CAAC,CAACuB,cAAc,CAAC,CAAC;IAClBhD,UAAU,CAAC,EAAE,CAAC;IACdc,iBAAiB,CAAC,EAAE,CAAC;IACrBV,gBAAgB,CAAE,EAAE,CAAC;IACrBM,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;IACfN,SAAS,CAAC,EAAE,CAAC;IACbE,YAAY,CAAC,EAAE,CAAC;EAElB,CAAC;EAID,oBACEZ,OAAA;IAAAsD,QAAA,gBACEtD,OAAA;MAAAsD,QAAA,eACAtD,OAAA;QAAAsD,QAAA,eACEtD,OAAA;UAAAsD,QAAA,EAAI;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAG/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACJ1D,OAAA;MAAM2D,QAAQ,EAAE1B,YAAa;MAAAqB,QAAA,gBAC3BtD,OAAA;QAAAsD,QAAA,eAEEtD,OAAA;UAAI4D,KAAK,EAAE,CAAE;UAAAN,QAAA,gBACbtD,OAAA;YAAAsD,QAAA,GAAO,2CAAyC,eAAAtD,OAAA;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC3D1D,OAAA;cACE6D,IAAI,EAAC,MAAM;cACX9B,KAAK,EAAElB,QAAS;cAChBiD,QAAQ,EAAGjC,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACG,MAAM,CAACD,KAAK;YAAE;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACV1D,OAAA;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACN1D,OAAA;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACN1D,OAAA;YAAAsD,QAAA,GAAO,kCAA0C,eAAAtD,OAAA;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC1D1D,OAAA;cACE6D,IAAI,EAAC,MAAM;cACX9B,KAAK,EAAEhB,QAAS;cAChB+C,QAAQ,EAAGjC,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACG,MAAM,CAACD,KAAK;YAAE;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACV1D,OAAA;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACN1D,OAAA;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACF1D,OAAA;YAAAsD,QAAA,EAAI;UAAwC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAAA1D,OAAA;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAExD1D,OAAA;YAAAsD,QAAA,GAAO,SAAO,eAAAtD,OAAA;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACvB1D,OAAA;cACE6D,IAAI,EAAC,MAAM;cACX/B,IAAI,EAAC,QAAQ;cACbC,KAAK,EAAEtB,MAAO;cACdqD,QAAQ,EAAElC;YAAkB;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,KAAC,eAAA1D,OAAA;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAAA1D,OAAA;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eAGV1D,OAAA;YAAAsD,QAAA,GAAO,YACK,eAAAtD,OAAA;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACnB1D,OAAA;cACE6D,IAAI,EAAC,MAAM;cACX/B,IAAI,EAAC,WAAW;cAChBC,KAAK,EAAEpB,SAAU;cACjBmD,QAAQ,EAAElC;YAAkB;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC,eACR1D,OAAA;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT1D,OAAA;YAAAsD,QAAA,eAAItD,OAAA;cAAK+D,KAAK,EAAE;gBAAEC,OAAO,EAAE,MAAM;gBAAEC,UAAU,EAAE;cAAS,CAAE;cAAAX,QAAA,GAAC,6CAEvD,eAAAtD,OAAA,CAACJ,aAAa;gBAAA2D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACb1D,OAAA;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT1D,OAAA;YAAKkE,EAAE,EAAC,UAAU;YAAAZ,QAAA,gBAChBtD,OAAA;cAAAsD,QAAA,gBACEtD,OAAA;gBACE6D,IAAI,EAAC,OAAO;gBACZ/B,IAAI,EAAC,SAAS;gBACdC,KAAK,EAAC,MAAM;gBACZoC,OAAO,EAAEhE,OAAO,KAAK,MAAO;gBAC5B2D,QAAQ,EAAElC;cAAkB;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7B,CAAC,EAAC,GAAG,EAAC,MAET;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACR1D,OAAA;cAAAsD,QAAA,gBACEtD,OAAA;gBACE6D,IAAI,EAAC,OAAO;gBACZ/B,IAAI,EAAC,SAAS;gBACdC,KAAK,EAAC,YAAY;gBAClBoC,OAAO,EAAEhE,OAAO,KAAK,YAAa;gBAClC2D,QAAQ,EAAElC;cAAkB;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7B,CAAC,EAAC,GAAG,EAAC,YAET;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACR1D,OAAA;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAAA1D,OAAA;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAGf1D,OAAA,CAACH,MAAM;QAACuE,IAAI,EAAC;MAAQ;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvB1D,OAAA,CAACH,MAAM;QAACuE,IAAI,EAAG,OAAO;QAACC,OAAO,EAAIhB;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAAA1D,OAAA;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAiBf,CAAC;AAEV,CAAC;AAACxD,EAAA,CAvNID,gBAAgB;AAAAqE,EAAA,GAAhBrE,gBAAgB;AAyNtB,eAAeA,gBAAgB;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}