{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dixita\\\\projects\\\\NCAR-Project6\\\\src\\\\StudentExercise1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CustomTooltip from './ToolTip';\nimport Button from './Button';\nimport Summary from './summary';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentExercise1 = () => {\n  _s();\n  const [answer2, setAnswer2] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [resultMessage2, setResultMessage2] = useState('');\n  const [volume, setVolume] = useState('');\n  const [frequency, setFrequency] = useState('');\n  const [inputOne, setInputOne] = useState('');\n  const [inputTwo, setInputTwo] = useState('');\n  const [divisionResult, setDivisionResult] = useState('');\n  const [iofreq, setIOfreqResult] = useState(\"\");\n  const threshold = 50;\n  const navigate = useNavigate();\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'volume') {\n      setVolume(value);\n      localStorage.setItem('IOVolume', value);\n    } else if (name === 'frequency') {\n      setFrequency(value);\n      localStorage.setItem('IOFrequency', value);\n    } else if (name === 'answer2') {\n      setAnswer2(value);\n      localStorage.setItem('RateThroughput', value);\n    }\n  };\n  const handleSubmit = e => {\n    if (inputOne && inputTwo && volume && frequency && answer2) {\n      setSubmitted(true);\n      const x = parseFloat(inputOne);\n      const y = parseFloat(inputTwo);\n      const w = parseFloat(volume);\n      const z = parseFloat(frequency);\n      if (!isNaN(x) && !isNaN(y) && !isNaN(w) && !isNaN(z)) {\n        const division = x / y;\n        const iofreq = w / z;\n        let result = \"\";\n        const start1 = `Based on your input, it appears that your science objective is amenable to GPU-based computing.  This assessment is based on several of your answers:`;\n        const True1 = `The number of grid points of ${divisionResult} per GPU or node is sufficient.  Typically, a GPU based computing solution requires in excessive of ${threshold} grid points per GPU`;\n        const True2 = `GPU’s are designed for computationally heavy problems.  You indicated that you perform approximately ${volume} Mbytes of disk I/O every ${frequency} seconds.It sounds like a significant percentage of time for your application is spent performing computations. This is necessary but not sufficient condition for the efficient use of GPU-based computing.`;\n        const start2 = `Based on your input, it does not appear that your science objective is amenable to GPU-based computing.  This assessment is based on several of your answers`;\n        const False1 = `The number of grid points per GPU or node is rather low ${divisionResult}.Typically, a GPU based computing solution requires in excess of ${threshold} grid points per GPU.\n          i. What can I do about this?  \n            1. Is the size of your problem sufficient to address your science objective or is it a limitation of your existing compute solution. If it is sufficient to address your science objective, then there does not appear to be an advantage of GPU-based solution versus a CPU-based solution.  If it is not sufficient, then a GPU-based solution may enable improvement of the fidelity of your simulations.`;\n        const False2 = `GPU’s are designed for computationally heavy problems.  You indicated that you perform approximately ${volume} Mbytes of disk I/O every ${frequency} seconds. A significant percentage of time for your application will likely be spent moving data from the GPU memory to the disk subsystem.\n          What can I do about this?\n          Can you reduce the amount of I/O that your application performs`;\n        const False3 = `You indicated that your problem has a [[strong, moderate, weak} ${answer2} limitation. While GPU-based computing can successfully be used for both rate and throughput computing tasks, it frequently does better for throughput based computing.`;\n        console.log(divisionResult);\n        console.log(iofreq);\n        if (division > 50) {\n          console.log(\"if statement reached\");\n          result = start1 + \"\\n\" + \"a. \" + True1 + \"\\n\" + \"b. \" + True2;\n        } else {\n          result = start2 + \" \";\n        }\n        setDivisionResult(division);\n        localStorage.setItem('divisionResult', division);\n        setIOfreqResult(iofreq);\n        localStorage.setItem('iofreq', iofreq);\n        setResultMessage2(result);\n        localStorage.setItem('resultMessage2', result);\n        navigate('/page2');\n      }\n    } else {\n      alert('Please answer all questions.');\n    }\n    e.preventDefault();\n  };\n  const clearOptions = e => {\n    e.preventDefault();\n    setAnswer2('');\n    setDivisionResult(\"\");\n    setResultMessage2(\"\");\n    setInputOne(\"\");\n    setInputTwo(\"\");\n    setVolume(\"\");\n    setFrequency(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Determine the following:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          start: 2,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Total number of independent grid-points: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 59\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputOne,\n              onChange: e => setInputOne(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Number of {node, GPU}: per run: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 58\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputTwo,\n              onChange: e => setInputTwo(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [\"What is the volume and frequency of I/O?\", /*#__PURE__*/_jsxDEV(CustomTooltip, {\n                title: \"Best explanation you can find for I/O frequency and Volume\",\n                placement: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Volume:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"volume\",\n              value: volume,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Frequency:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"frequency\",\n              value: frequency,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [\"Do you have rate or throughput limitations?\", /*#__PURE__*/_jsxDEV(CustomTooltip, {\n                title: \"A really good explanation of rate and throughput\",\n                placement: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"options2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"answer2\",\n                value: \"rate\",\n                checked: answer2 === 'rate',\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), ' ', \"Rate\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"answer2\",\n                value: \"throughput\",\n                checked: answer2 === 'throughput',\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), ' ', \"Throughput\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Clear\",\n        onClick: clearOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentExercise1, \"D+rySQllHt3gg2SGnbKQHuF1JYs=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentExercise1;\nexport default StudentExercise1;\nvar _c;\n$RefreshReg$(_c, \"StudentExercise1\");","map":{"version":3,"names":["React","useState","useEffect","CustomTooltip","Button","Summary","Route","Routes","useNavigate","jsxDEV","_jsxDEV","StudentExercise1","_s","answer2","setAnswer2","submitted","setSubmitted","resultMessage2","setResultMessage2","volume","setVolume","frequency","setFrequency","inputOne","setInputOne","inputTwo","setInputTwo","divisionResult","setDivisionResult","iofreq","setIOfreqResult","threshold","navigate","handleInputChange","e","name","value","target","localStorage","setItem","handleSubmit","x","parseFloat","y","w","z","isNaN","division","result","start1","True1","True2","start2","False1","False2","False3","console","log","alert","preventDefault","clearOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","start","type","onChange","style","display","alignItems","title","placement","id","checked","text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dixita/projects/NCAR-Project6/src/StudentExercise1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CustomTooltip from './ToolTip';\r\nimport Button from './Button';\r\nimport Summary from './summary';\r\nimport {Route, Routes, useNavigate} from 'react-router-dom';\r\n\r\n\r\nconst StudentExercise1 = () => {\r\n  const [answer2, setAnswer2] = useState('');\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [resultMessage2, setResultMessage2] = useState('');\r\n  const [volume, setVolume] = useState('');\r\n  const [frequency, setFrequency] = useState('');\r\n  const [inputOne, setInputOne] = useState('');\r\n  const [inputTwo, setInputTwo] = useState('');\r\n  const [divisionResult, setDivisionResult] = useState('');\r\n  const [iofreq, setIOfreqResult] = useState(\"\")\r\n  const threshold = 50;\r\n  const navigate = useNavigate();\r\n \r\n\r\n\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'volume') {\r\n      setVolume(value);\r\n      localStorage.setItem('IOVolume', value);\r\n    } else if (name === 'frequency') {\r\n      setFrequency(value);\r\n      localStorage.setItem('IOFrequency', value);\r\n    } else if (name === 'answer2') {\r\n      setAnswer2(value);\r\n      localStorage.setItem('RateThroughput', value);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    \r\n\r\n\r\n      if (inputOne && inputTwo && volume && frequency && answer2) {\r\n        setSubmitted(true);\r\n\r\n\r\n        const x = parseFloat(inputOne);\r\n        const y = parseFloat(inputTwo);\r\n        const w = parseFloat(volume)\r\n        const z = parseFloat(frequency)\r\n\r\n        if (!isNaN(x) && !isNaN(y) && !isNaN(w) && !isNaN(z)){\r\n          const division = x / y;\r\n          const iofreq = w/z;\r\n\r\n        \r\n          let result = \"\"\r\n\r\n          const start1 = `Based on your input, it appears that your science objective is amenable to GPU-based computing.  This assessment is based on several of your answers:`\r\n          const True1 = `The number of grid points of ${divisionResult} per GPU or node is sufficient.  Typically, a GPU based computing solution requires in excessive of ${threshold} grid points per GPU`\r\n\r\n          const True2 = `GPU’s are designed for computationally heavy problems.  You indicated that you perform approximately ${volume} Mbytes of disk I/O every ${frequency} seconds.It sounds like a significant percentage of time for your application is spent performing computations. This is necessary but not sufficient condition for the efficient use of GPU-based computing.`\r\n          const start2 = `Based on your input, it does not appear that your science objective is amenable to GPU-based computing.  This assessment is based on several of your answers`\r\n          const False1 = `The number of grid points per GPU or node is rather low ${divisionResult}.Typically, a GPU based computing solution requires in excess of ${threshold} grid points per GPU.\r\n          i. What can I do about this?  \r\n            1. Is the size of your problem sufficient to address your science objective or is it a limitation of your existing compute solution. If it is sufficient to address your science objective, then there does not appear to be an advantage of GPU-based solution versus a CPU-based solution.  If it is not sufficient, then a GPU-based solution may enable improvement of the fidelity of your simulations.`\r\n          \r\n          const False2 = `GPU’s are designed for computationally heavy problems.  You indicated that you perform approximately ${volume} Mbytes of disk I/O every ${frequency} seconds. A significant percentage of time for your application will likely be spent moving data from the GPU memory to the disk subsystem.\r\n          What can I do about this?\r\n          Can you reduce the amount of I/O that your application performs`\r\n          const False3 = `You indicated that your problem has a [[strong, moderate, weak} ${answer2} limitation. While GPU-based computing can successfully be used for both rate and throughput computing tasks, it frequently does better for throughput based computing.`\r\n\r\n          console.log(divisionResult)\r\n          console.log(iofreq)\r\n        \r\n          if ( division > 50){\r\n            console.log(\"if statement reached\")\r\n            result = start1 + \"\\n\" + \"a. \" + True1 + \"\\n\"+ \"b. \"+ True2\r\n          }\r\n          else{\r\n            result = start2 + \" \"\r\n          }\r\n\r\n          setDivisionResult(division);\r\n          localStorage.setItem('divisionResult', division);\r\n          setIOfreqResult(iofreq);\r\n          localStorage.setItem('iofreq', iofreq);\r\n          setResultMessage2 (result);\r\n          localStorage.setItem('resultMessage2', result);\r\n          navigate('/page2');\r\n        }\r\n        \r\n      } else{\r\n        \r\n        alert('Please answer all questions.');\r\n      }\r\n\r\n\r\n      \r\n    \r\n    e.preventDefault();\r\n  };\r\n\r\n\r\n\r\n  const clearOptions = (e) => {\r\n    e.preventDefault();\r\n    setAnswer2('');\r\n    setDivisionResult(\"\");\r\n    setResultMessage2 (\"\");\r\n    setInputOne(\"\")\r\n    setInputTwo(\"\")\r\n    setVolume(\"\")\r\n    setFrequency(\"\")\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n      <ol>\r\n        <li>Determine the following:</li>\r\n        \r\n       \r\n      </ol>\r\n    </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          \r\n          <ol start={2}>\r\n          <label>Total number of independent grid-points: <br></br>\r\n        <input\r\n          type=\"text\"\r\n          value={inputOne}\r\n          onChange={(e) => setInputOne(e.target.value)}\r\n          \r\n        /></label>\r\n        <br />\r\n        <br />\r\n        <label>Number of &#123;node, GPU&#125;: per run: <br></br>\r\n        <input\r\n          type=\"text\"\r\n          value={inputTwo}\r\n          onChange={(e) => setInputTwo(e.target.value)}\r\n        /></label>\r\n        <br />\r\n        <br />\r\n            <li><div style={{ display: 'flex', alignItems: 'center' }}>\r\n                What is the volume and frequency of I/O?\r\n                <CustomTooltip title=\"Best explanation you can find for I/O frequency and Volume\" placement=\"right\" />\r\n              </div></li>\r\n              <label>Volume:<br></br>\r\n              <input\r\n                type=\"text\"\r\n                name=\"volume\"\r\n                value={volume}\r\n                onChange={handleInputChange}\r\n              /> <br></br><br></br>\r\n              </label>\r\n       \r\n\r\n            <label>\r\n              Frequency:<br></br>\r\n              <input\r\n                type=\"text\"\r\n                name=\"frequency\"\r\n                value={frequency}\r\n                onChange={handleInputChange}\r\n              />\r\n            </label>\r\n            <br></br>\r\n            <li><div style={{ display: 'flex', alignItems: 'center' }}>\r\n                Do you have rate or throughput limitations?\r\n                <CustomTooltip title=\"A really good explanation of rate and throughput\" placement=\"right\" />\r\n              </div></li> \r\n            <br></br>\r\n            <div id=\"options2\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"answer2\"\r\n                  value=\"rate\"\r\n                  checked={answer2 === 'rate'}\r\n                  onChange={handleInputChange}\r\n                />{' '}\r\n                Rate\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"answer2\"\r\n                  value=\"throughput\"\r\n                  checked={answer2 === 'throughput'}\r\n                  onChange={handleInputChange}\r\n                />{' '}\r\n                Throughput\r\n              </label> \r\n              <br></br>\r\n            </div>\r\n          </ol>\r\n        </div><br></br>\r\n\r\n       \r\n        <Button text=\"Submit\"/>\r\n        <Button text = \"Clear\" onClick = {clearOptions} />\r\n        </form><br></br>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentExercise1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}